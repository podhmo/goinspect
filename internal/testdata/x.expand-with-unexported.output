package github.com/podhmo/goinspect/internal/x

  func x.F(s x.S)
    func x.log() func()
    func x.F0()
      func x.log() func()
      func x.F1()
        func x.log() func()
        func x.H()
    func x.H()

  func x.G()
    func x.log() func()
    func x.G0()
      func x.log() func()
      func x.H()
    func x/sub.X()

  type x.state struct{}
    func (*x.state).mark()
    func (*x.state).eval(v interface{})
      func (*x.state).mark()

  type x.W struct{}
    func (*x.W).Method(s x.S)
      func x.G0()
        func x.log() func()
        func x.H()
      func x.log() func()
    func (*x.W).MethodWithCompoliteLiteral(s x.S)
      func x.log() func()
      func (x.W0).M0()
        func x.G0()
          func x.log() func()
          func x.H()
        func (*x.W0).Inner()
      func (*x.W0).M1()
        func x.F0()
          func x.log() func()
          func x.F1()
            func x.log() func()
            func x.H()
        func (*x.W0).Inner()
    func (*x.W).MethodWithMethodInvoke(s x.S)
      func x.log() func()
      func (*x.W0).M1()
        func x.F0()
          func x.log() func()
          func x.F1()
            func x.log() func()
            func x.H()
        func (*x.W0).Inner()
    func (*x.W).MethodWithFactoryFunction(s x.S)
      func x.log() func()
      func (*x.W0).M1()
        func x.F0()
          func x.log() func()
          func x.F1()
            func x.log() func()
            func x.H()
        func (*x.W0).Inner()
      func x.NewW0() *x.W0
    func (x.W).String() string

  type x.W0 struct{}
    func (x.W0).M0()
      func x.G0()
        func x.log() func()
        func x.H()
      func (*x.W0).Inner()
    func (*x.W0).M1()
      func x.F0()
        func x.log() func()
        func x.F1()
          func x.log() func()
          func x.H()
      func (*x.W0).Inner()
    func (*x.W0).M2(v interface{})
      func (*x.state).eval(v interface{})
        func (*x.state).mark()

  func x.RecRoot(n int)
    func x.R(n int) int
      func x.H()
      func x.R(n int) int // recursion
    func x.Odd(n int) bool
      func x.H()
      func x.Even(n int) bool
        func x.H()
        func x.Odd(n int) bool // recursion
